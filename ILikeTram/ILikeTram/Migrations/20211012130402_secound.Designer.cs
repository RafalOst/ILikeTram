// <auto-generated />
using System;
using ILikeTram.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ILikeTram.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211012130402_secound")]
    partial class secound
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ILikeTram.Model.Route", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TramRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Stare Miasto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nowa Huta"
                        });
                });

            modelBuilder.Entity("ILikeTram.Model.Tram", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstRun")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Trams");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstRun = new DateTime(1999, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PartyTram"
                        },
                        new
                        {
                            ID = 2,
                            FirstRun = new DateTime(1980, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OldTram"
                        });
                });

            modelBuilder.Entity("ILikeTram.Model.TramStop", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RouteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("RouteId");

                    b.ToTable("TramStops");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Hello, are you there?",
                            Name = "Plac Inwalidow",
                            RouteId = 1
                        },
                        new
                        {
                            ID = 2,
                            Description = "Hi, are you reading this?",
                            Name = "Meksyk",
                            RouteId = 2
                        });
                });

            modelBuilder.Entity("ILikeTram.Model.TramStop", b =>
                {
                    b.HasOne("ILikeTram.Model.Route", "Route")
                        .WithMany("StopsList")
                        .HasForeignKey("RouteId");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ILikeTram.Model.Route", b =>
                {
                    b.Navigation("StopsList");
                });
#pragma warning restore 612, 618
        }
    }
}
